{"version":3,"sources":["api/users.ts","components/TodoForm/TodoForm.tsx","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/todos.ts","App.tsx","index.tsx"],"names":["id","name","username","email","TodoForm","props","onSubmit","handleSubmit","className","type","placeholder","value","formInputs","title","onChange","handleTitleInput","titleErrorMessage","userId","handleUserSelect","disabled","firstOptionDisabled","usersFromServer","map","user","userErrorMessage","UserInfo","href","TodoInfo","todo","completed","cn","TodoList","todos","App","useState","todosFromServer","setTodos","setFirstOptionDisabled","setFormInputs","setTitleErrorMessage","setUserErrorMessage","todosWithUsers","find","u","event","preventDefault","maxId","reduce","max","Infinity","input","target","replace","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dc8e38f8.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import usersFromServer from '../../api/users';\n\ninterface Props {\n  handleSubmit: (event: React.FormEvent) => void;\n  handleTitleInput: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  handleUserSelect: (event: React.ChangeEvent<HTMLSelectElement>) => void;\n\n  formInputs: {\n    title: string;\n    userId: number;\n  };\n\n  titleErrorMessage: string;\n  firstOptionDisabled: boolean;\n  userErrorMessage: string;\n\n}\n\nexport const TodoForm = (props: Props) => (\n  <form onSubmit={props.handleSubmit}>\n    <div className=\"field\">\n      <input\n        type=\"text\"\n        data-cy=\"titleInput\"\n        placeholder=\"Please enter a title\"\n        value={props.formInputs.title}\n        onChange={props.handleTitleInput}\n      />\n\n      {props.titleErrorMessage && (\n        <span className=\"error\">\n          {props.titleErrorMessage}\n        </span>\n      )}\n    </div>\n\n    <div className=\"field\">\n      <select\n        data-cy=\"userSelect\"\n        value={props.formInputs.userId}\n        onChange={props.handleUserSelect}\n      >\n        <option\n          value=\"0\"\n          disabled={props.firstOptionDisabled}\n        >\n          Choose a user\n        </option>\n        {usersFromServer.map(user => (\n          <option value={user.id} key={user.id}>\n            {user.name}\n          </option>\n        ))}\n      </select>\n\n      {props.userErrorMessage && (\n        <span className=\"error\">\n          {props.userErrorMessage}\n        </span>\n      )}\n    </div>\n\n    <button type=\"submit\" data-cy=\"submitButton\">\n      Add\n    </button>\n  </form>\n);\n","import User from '../../interfaces/User';\n\ninterface Props {\n  user: User;\n}\n\nexport const UserInfo = ({ user: { email, name } }: Props) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import cn from 'classnames';\nimport Todo from '../../interfaces/Todo';\nimport { UserInfo } from '../UserInfo';\n\ninterface Props {\n  todo: Todo;\n}\n\nexport const TodoInfo = ({\n  todo: {\n    id, title, completed, user,\n  },\n}: Props) => {\n  return (\n    <article\n      data-id={id}\n      className={cn('TodoInfo', { 'TodoInfo--completed': completed })}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import Todo from '../../interfaces/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface Props {\n  todos: Todo[];\n}\n\nexport const TodoList = ({ todos }: Props) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo\n          todo={todo}\n          key={todo.id}\n        />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import './App.scss';\nimport { useState } from 'react';\n\nimport { TodoForm } from './components/TodoForm/TodoForm';\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nexport const App = () => {\n  const [todos, setTodos] = useState(todosFromServer);\n  const [firstOptionDisabled, setFirstOptionDisabled] = useState(false);\n  const [formInputs, setFormInputs] = useState({\n    title: '',\n    userId: 0,\n  });\n  const [titleErrorMessage, setTitleErrorMessage] = useState('');\n  const [userErrorMessage, setUserErrorMessage] = useState('');\n\n  const todosWithUsers = todos.map(todo => ({\n    ...todo,\n    user: usersFromServer.find(u => u.id === todo.userId),\n  }));\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!formInputs.title) {\n      setTitleErrorMessage('Please enter a title');\n    }\n\n    if (formInputs.userId <= 0) {\n      setUserErrorMessage('Please choose a user');\n    }\n\n    if (formInputs.userId <= 0 || !formInputs.title) {\n      return;\n    }\n\n    const maxId = todos.reduce((max, todo) => {\n      if (todo.id > max) {\n        return todo.id;\n      }\n\n      return max;\n    }, -Infinity);\n\n    setTodos([\n      ...todos,\n      {\n        id: maxId + 1,\n        title: formInputs.title,\n        completed: false,\n        userId: formInputs.userId,\n      },\n    ]);\n\n    setFormInputs({\n      title: '',\n      userId: 0,\n    });\n  };\n\n  const handleTitleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const input = event.target.value.replace(/[^a-zA-Zа-яА-Я0-9 ]/gi, '');\n\n    setFormInputs({\n      ...formInputs,\n      title: input,\n    });\n    setTitleErrorMessage('');\n  };\n\n  const handleUserSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setFormInputs({\n      ...formInputs,\n      userId: +event.target.value,\n    });\n    setFirstOptionDisabled(true);\n    setUserErrorMessage('');\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <TodoForm\n        handleSubmit={handleSubmit}\n        handleTitleInput={handleTitleInput}\n        handleUserSelect={handleUserSelect}\n        formInputs={formInputs}\n        titleErrorMessage={titleErrorMessage}\n        userErrorMessage={userErrorMessage}\n        firstOptionDisabled={firstOptionDisabled}\n      />\n\n      <TodoList todos={todosWithUsers} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}